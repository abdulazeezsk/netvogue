<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/css/**" 		location="/resources/css/" />
	<mvc:resources mapping="/img/**" 		location="/resources/img/" />
	<mvc:resources mapping="/images/**" 	location="/resources/images/" />
	<mvc:resources mapping="/js/**" 		location="/resources/js/" />
	<mvc:resources mapping="/lib/**" 		location="/resources/lib/" />
	<mvc:resources mapping="/templates/**" 	location="/resources/templates/" />
	<!--  <mvc:resources mapping="/views/**" location="/views/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="org.netvogue.server.admin.controllers" />
	
	<!-- http://stackoverflow.com/questions/6479712/why-is-jackson-wrapping-my-objects-with-an-extra-layer-named-after-the-class -->
    <beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
    	<beans:property name="extractValueFromSingleKeyModel" value="true" />
    </beans:bean>  
	
</beans:beans>
